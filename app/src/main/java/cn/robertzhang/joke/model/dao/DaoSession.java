package cn.robertzhang.joke.model.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import cn.robertzhang.joke.model.entities.joke.Item;
import cn.robertzhang.joke.model.entities.joke.User;
import cn.robertzhang.joke.model.entities.joke.Votes;
import cn.robertzhang.joke.model.entities.one.Article;
import cn.robertzhang.joke.model.entities.one.Home;
import cn.robertzhang.joke.model.entities.one.Question;
import cn.robertzhang.joke.model.entities.one.Thing;
import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;



// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig votesDaoConfig;
    private final DaoConfig itemDaoConfig;
    private final DaoConfig articleDaoConfig;
    private final DaoConfig homeDaoConfig;
    private final DaoConfig questionDaoConfig;
    private final DaoConfig thingDaoConfig;

    private final UserDao userDao;
    private final VotesDao votesDao;
    private final ItemDao itemDao;
    private final ArticleDao articleDao;
    private final HomeDao homeDao;
    private final QuestionDao questionDao;
    private final ThingDao thingDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        votesDaoConfig = daoConfigMap.get(VotesDao.class).clone();
        votesDaoConfig.initIdentityScope(type);

        itemDaoConfig = daoConfigMap.get(ItemDao.class).clone();
        itemDaoConfig.initIdentityScope(type);

        articleDaoConfig = daoConfigMap.get(ArticleDao.class).clone();
        articleDaoConfig.initIdentityScope(type);

        homeDaoConfig = daoConfigMap.get(HomeDao.class).clone();
        homeDaoConfig.initIdentityScope(type);

        questionDaoConfig = daoConfigMap.get(QuestionDao.class).clone();
        questionDaoConfig.initIdentityScope(type);

        thingDaoConfig = daoConfigMap.get(ThingDao.class).clone();
        thingDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        votesDao = new VotesDao(votesDaoConfig, this);
        itemDao = new ItemDao(itemDaoConfig, this);
        articleDao = new ArticleDao(articleDaoConfig, this);
        homeDao = new HomeDao(homeDaoConfig, this);
        questionDao = new QuestionDao(questionDaoConfig, this);
        thingDao = new ThingDao(thingDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(Votes.class, votesDao);
        registerDao(Item.class, itemDao);
        registerDao(Article.class, articleDao);
        registerDao(Home.class, homeDao);
        registerDao(Question.class, questionDao);
        registerDao(Thing.class, thingDao);
    }
    
    public void clear() {
        userDaoConfig.getIdentityScope().clear();
        votesDaoConfig.getIdentityScope().clear();
        itemDaoConfig.getIdentityScope().clear();
        articleDaoConfig.getIdentityScope().clear();
        homeDaoConfig.getIdentityScope().clear();
        questionDaoConfig.getIdentityScope().clear();
        thingDaoConfig.getIdentityScope().clear();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public VotesDao getVotesDao() {
        return votesDao;
    }

    public ItemDao getItemDao() {
        return itemDao;
    }

    public ArticleDao getArticleDao() {
        return articleDao;
    }

    public HomeDao getHomeDao() {
        return homeDao;
    }

    public QuestionDao getQuestionDao() {
        return questionDao;
    }

    public ThingDao getThingDao() {
        return thingDao;
    }

}
